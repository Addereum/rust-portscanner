name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_linux_arm7:
    name: Linux ARMv7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: armv7-unknown-linux-gnueabihf
          override: true
      - uses: actions-rs/cargo@v1
        name: Build Release
        with:
          use-cross: true
          command: build
          args: --target armv7-unknown-linux-gnueabihf --release --all-features
      - uses: actions-rs/cargo@v1
        name: Build Debug
        with:
          use-cross: true
          command: build
          args: --target armv7-unknown-linux-gnueabihf --all-features
      - name: Copy binaries
        run: |
          mv target/armv7-unknown-linux-gnueabihf/release/portscanner ./portscanner
          mv target/armv7-unknown-linux-gnueabihf/debug/portscanner ./portscanner-debug
      - uses: actions/upload-artifact@v4
        with:
          name: portscanner-armv7-unknown-linux-gnueabihf
          path: |
            portscanner
            portscanner-debug
  build_linux_x86:
    name: Linux x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - uses: actions-rs/cargo@v1
        name: Build Release
        with:
          use-cross: true
          command: build
          args: --target x86_64-unknown-linux-gnu --release --all-features
      - uses: actions-rs/cargo@v1
        name: Build Debug
        with:
          use-cross: true
          command: build
          args: --target x86_64-unknown-linux-gnu --all-features
      - name: Rust Cargo Deb Package Build (amd64, Debian)
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install cargo-deb
          cargo deb --target=x86_64-unknown-linux-gnu
      - name: Copy binaries
        run: |
          mv target/x86_64-unknown-linux-gnu/release/portscanner ./portscanner
          mv target/x86_64-unknown-linux-gnu/debug/portscanner ./portscanner-debug
          mv target/x86_64-unknown-linux-gnu/debian/*.deb ./
      - uses: actions/upload-artifact@v4
        with:
          name: portscanner-x86_64-unknown-linux-gnu
          path: |
            portscanner
            portscanner-debug
            *.deb
  build_windows_x86:
    name: Windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true
      - uses: actions-rs/cargo@v1
        name: Build Release
        with:
          use-cross: true
          command: build
          args: --target x86_64-pc-windows-gnu --release --all-features
      - uses: actions-rs/cargo@v1
        name: Build Debug
        with:
          use-cross: true
          command: build
          args: --target x86_64-pc-windows-gnu --all-features
      - name: Copy binaries
        run: |
          mv target/x86_64-pc-windows-gnu/release/portscanner.exe ./portscanner.exe
          mv target/x86_64-pc-windows-gnu/debug/portscanner.exe ./debug-portscanner.exe
      - uses: actions/upload-artifact@v4
        with:
          name: portscanner-x86_64-pc-windows-gnu
          path: |
            portscanner.exe
            debug-portscanner.exe
